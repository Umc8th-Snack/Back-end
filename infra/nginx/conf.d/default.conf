server {
    listen 80;
    server_name snacknews.site www.snacknews.site;

    # 모든 HTTP 요청을 HTTPS로 리디렉션
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name snacknews.site www.snacknews.site;

    ssl_certificate /etc/letsencrypt/live/snacknews.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/snacknews.site/privkey.pem;

    # /api/ 경로의 요청을 백엔드 서버로 프록시
    location /api/ {
        proxy_pass http://spring:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # /swagger-ui/ 경로의 요청을 백엔드 서버로 프록시
    location /swagger-ui/ {
        proxy_pass http://spring:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # /v3/api-docs 경로의 요청을 백엔드 서버로 프록시
    location /v3/api-docs {
        proxy_pass http://spring:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # /nlp/ 경로의 요청을 NLP 서버로 프록시
    location /nlp/ {
        proxy_pass http://localhost:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 루트(root) 경로 요청 처리
    location / {
        return 200 'Secure connection OK';
        add_header Content-Type text/plain;
    }
}