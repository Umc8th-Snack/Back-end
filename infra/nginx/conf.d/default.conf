server {
    listen 80;
    server_name snacknews.site www.snacknews.site;

    # 모든 HTTP 요청을 HTTPS로 리디렉션
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name snacknews.site www.snacknews.site;

    ssl_certificate /etc/letsencrypt/live/snacknews.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/snacknews.site/privkey.pem;

    # CORS 설정
    location /api/ {
        # CORS Preflight 요청(OPTIONS) 처리
        if ($request_method = OPTIONS) {
            add_header 'Access-Control-Allow-Origin' '$http_origin';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Content-Length' '0';
            add_header 'Content-Type' 'text/plain; charset=UTF-8';
            return 204;
        }

        # 일반 요청에 대한 CORS 헤더
        add_header 'Access-Control-Allow-Origin' '$http_origin';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE';
        add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept, Origin, X-Requested-With';
        add_header 'Access-Control-Allow-Credentials' 'true';

        # 백엔드 서버로 요청 프록시
        proxy_pass http://spring:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Swagger UI 요청을 프록시하는 블록
    location /swagger-ui/ {
        proxy_pass http://spring:8080/swagger-ui/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # API 문서 요청을 프록시하는 블록
    location /v3/api-docs {
        proxy_pass http://spring:8080;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # NLP 서버 요청을 프록시하는 블록
    location /nlp/ {
        proxy_pass http://python:5000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # 루트(root) 경로 요청 처리
    location / {
        return 200 'Secure connection OK';
        add_header Content-Type text/plain;
    }
}