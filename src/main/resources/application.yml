spring:
  jackson:
    time-zone: Asia/Seoul
  config:
    import: optional:file:.env[.properties]
  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT}/${DB_NAME}?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: ${DB_USER}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect

  jwt:
    token:
      secretKey: ${JWT_SECRET_KEY}
      expiration:
#        access: 1800000 # 30분
#        refresh: 86400000 # 1일
#        access: 60000 # 1분
#        refresh: 180000 # 3분
        access: 300000 # 5분
        refresh: 600000 # 10분

  cache:
    type: caffeine # 사용할 캐시 엔진 : 카페인
    caffeine:
      spec: maximumSize=100,expireAfterWrite=8h,recordStats # 캐시 세부 설정

management:
  endpoints:
    web:
      exposure:
        include: health,info,caches


# 프론트엔드 URL 설정
frontend:
  url: ${FRONTEND_URL:http://localhost:3000}

server:
  port: 8080

logging:
  level:
    root: info
    umc.snack.crawler.service.ArticleCrawlerService: info

gemini:
  baseurl: https://generativelanguage.googleapis.com/v1

googleai:
  api:
    key: ${GOOGLE_API_KEY}

# 구글 OAuth2 설정
google:
  oauth:
    client-id: ${GOOGLE_OAUTH_CLIENT_ID}
    client-secret: ${GOOGLE_OAUTH_CLIENT_SECRET}
    redirect-uri: ${GOOGLE_OAUTH_REDIRECT_URI}

fastapi:
  url: http://python:5000
# AWS S3 설정
aws:

  s3:
    access-key: ${AWS_ACCESS_KEY}
    secret-key: ${AWS_SECRET_KEY}
    region: ${AWS_REGION:ap-northeast-2}
    bucket-name: ${AWS_S3_BUCKET}

